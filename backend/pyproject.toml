[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["K0FFE1NE <danielwang24680@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
annotated-types = "0.5.0"
anyio = "4.0.0"
asgiref = "3.7.2"
blinker = "1.6.2"
cachelib = "0.10.2"
certifi = "2023.7.22"
click = "8.1.7"
distlib = "0.3.7"
exceptiongroup = "1.1.3"
filelock = "3.12.4"
flask = "2.3.3"
flask-cors = "4.0.0"
flask-session = "0.5.0"
gunicorn = "21.2.0"
h11 = "0.14.0"
httpcore = "0.18.0"
httpx = "0.25.0"
idna = "3.4"
iniconfig = "2.0.0"
itsdangerous = "2.1.2"
jinja2 = "3.1.2"
markupsafe = "2.1.3"
nodeenv = "1.8.0"
packaging = "23.2"
platformdirs = "3.11.0"
pluggy = "1.3.0"
prisma = "0.10.0"
pydantic = "2.4.1"
pydantic-core = "2.10.1"
python-dotenv = "1.0.0"
sniffio = "1.3.0"
tomli = "2.0.1"
tomlkit = "0.12.1"
typing-extensions = "4.8.0"
werkzeug = "2.3.7"
pytest = "^7.4.2"


[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.1"

[tool.poe.tasks]
# run in this format: poetry poe run
help = "run backend in dev environment"
run = "./runBackend.sh"

# run in this format: poetry poe tests
[tool.poe.tasks.tests]
help = "pytest all test files"
shell = "trap 'exit 0' SIGINT && cd tests && ./updateTestSchema.sh && pytest && cd .. && prisma db push"
interpreter = "bash"

# run in this format: poetry poe test_one -f `filename`
[tool.poe.tasks.test_one]
help = "pytest one test file"
shell = "trap 'exit 0' SIGINT && cd tests && ./updateTestSchema.sh && pytest $testname && cd .. && prisma db push"
interpreter = "bash"
    [[tool.poe.tasks.test_one.args]]
    name = "testname"
    help = "filename of test to run"
    options = ["-f", "--filename"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
